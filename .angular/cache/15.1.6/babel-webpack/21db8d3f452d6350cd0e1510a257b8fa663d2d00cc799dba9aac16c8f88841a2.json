{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/proveedores.service\";\nimport * as i2 from \"@angular/forms\";\nexport class AgregarprovComponent {\n  constructor(ServiceProveedor) {\n    this.ServiceProveedor = ServiceProveedor;\n    this.proveedor = {\n      codigo: '',\n      nombre: '',\n      direccion: '',\n      telefono: '',\n      correo: ''\n    };\n  }\n  guardarProv() {\n    this.ServiceProveedor.guardar(this.proveedor.codigo, this.proveedor.nombre, this.proveedor.direccion, this.proveedor.telefono, this.proveedor.correo).subscribe(res => {\n      alert('Proveedor agregado con éxito');\n      this.limpiarProv();\n      location.reload();\n    }, err => {\n      console.log(err);\n    });\n  }\n  limpiarProv() {\n    this.proveedor.codigo = '';\n    this.proveedor.nombre = '';\n    this.proveedor.direccion = '';\n    this.proveedor.telefono = '';\n    this.proveedor.correo = '';\n  } //Cierre del metodo limpiarEmp\n}\nAgregarprovComponent.ɵfac = function AgregarprovComponent_Factory(t) {\n  return new (t || AgregarprovComponent)(i0.ɵɵdirectiveInject(i1.ProveedoresService));\n};\nAgregarprovComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AgregarprovComponent,\n  selectors: [[\"app-agregarprov\"]],\n  decls: 42,\n  vars: 4,\n  consts: [[\"novalidate\", \"\", 1, \"needs-validation\"], [1, \"form-row\"], [1, \"col-md-6\", \"mb-3\"], [\"for\", \"validationCustom01\"], [\"type\", \"text\", \"name\", \"nombre\", \"id\", \"validationCustom01\", \"ngDefaultControl\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"valid-feedback\"], [1, \"invalid-feedback\"], [\"for\", \"validationCustom02\"], [\"type\", \"text\", \"name\", \"direccion\", \"id\", \"validationCustom02\", \"ngDefaultControl\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"validationCustom03\"], [\"id\", \"emailHelp\", 1, \"form-text\", \"text-muted\"], [\"type\", \"text\", \"name\", \"telefono\", \"id\", \"validationCustom03\", \"ngDefaultControl\", \"\", \"multiple\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"validationCustom05\"], [\"type\", \"text\", \"name\", \"correo\", \"id\", \"validationCustom05\", \"ngDefaultControl\", \"\", \"multiple\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-info\", 3, \"click\"]],\n  template: function AgregarprovComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AgregarprovComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.proveedor.nombre = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵtext(8, \"Correcto!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6);\n      i0.ɵɵtext(10, \"Por favor ingresa un dato valido.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 2)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Direccion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AgregarprovComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.proveedor.direccion = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 5);\n      i0.ɵɵtext(16, \"Correcto!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 6);\n      i0.ɵɵtext(18, \"Por favor ingresa un dato valido.\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 1)(20, \"div\", 2)(21, \"label\", 9);\n      i0.ɵɵtext(22, \"Telefono\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"small\", 10);\n      i0.ɵɵtext(24, \"Ingresa los telefonos separados por comas.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AgregarprovComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.proveedor.telefono = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 5);\n      i0.ɵɵtext(27, \"Correcto!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 6);\n      i0.ɵɵtext(29, \"Por favor ingresa un dato valido.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 2)(31, \"label\", 12);\n      i0.ɵɵtext(32, \"Correo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"small\", 10);\n      i0.ɵɵtext(34, \"Ingresa los correos separados por comas.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function AgregarprovComponent_Template_input_ngModelChange_35_listener($event) {\n        return ctx.proveedor.correo = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 5);\n      i0.ɵɵtext(37, \"Correcto!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 6);\n      i0.ɵɵtext(39, \"Por favor ingresa un dato valido.\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function AgregarprovComponent_Template_button_click_40_listener() {\n        return ctx.guardarProv();\n      });\n      i0.ɵɵtext(41, \"Guardar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.proveedor.nombre);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.proveedor.direccion);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.proveedor.telefono);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.proveedor.correo);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,oBAAoB;EAC/BC,YAAoBC,gBAAoC;IAApC,qBAAgB,GAAhBA,gBAAgB;IAEpC,cAAS,GAAG;MACVC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;KACT;EAR0D;EAU3DC,WAAW;IACT,IAAI,CAACN,gBAAgB,CAACO,OAAO,CAC3B,IAAI,CAACC,SAAS,CAACP,MAAM,EACrB,IAAI,CAACO,SAAS,CAACN,MAAM,EACrB,IAAI,CAACM,SAAS,CAACL,SAAS,EACxB,IAAI,CAACK,SAAS,CAACJ,QAAQ,EACvB,IAAI,CAACI,SAAS,CAACH,MAAM,CACtB,CAACI,SAAS,CACRC,GAAG,IAAI;MACNC,KAAK,CAAC,8BAA8B,CAAC;MACrC,IAAI,CAACC,WAAW,EAAE;MAClBC,QAAQ,CAACC,MAAM,EAAE;IACnB,CAAC,EACAC,GAAG,IAAI;MACNC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CACF;EACH;EAEAH,WAAW;IACT,IAAI,CAACJ,SAAS,CAACP,MAAM,GAAG,EAAE;IAC1B,IAAI,CAACO,SAAS,CAACN,MAAM,GAAG,EAAE;IAC1B,IAAI,CAACM,SAAS,CAACL,SAAS,GAAG,EAAE;IAC7B,IAAI,CAACK,SAAS,CAACJ,QAAQ,GAAG,EAAE;IAC5B,IAAI,CAACI,SAAS,CAACH,MAAM,GAAG,EAAE;EAC5B,CAAC,CAAC;;AApCSP,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRjCC,2BAAK;MAI2CA,sBAAM;MAAAA,iBAAQ;MAC9CA,gCACqC;MAAjCA;QAAA;MAAA,EAA8B;MADlCA,iBACqC;MACrCA,8BAA4B;MAAAA,yBAAS;MAAAA,iBAAM;MAC3CA,8BAA8B;MAAAA,kDAAiC;MAAAA,iBAAM;MAEzEA,+BAA2B;MACSA,0BAAS;MAAAA,iBAAQ;MACjDA,iCACwC;MAApCA;QAAA;MAAA,EAAiC;MADrCA,iBACwC;MACxCA,+BAA4B;MAAAA,0BAAS;MAAAA,iBAAM;MAC3CA,+BAA8B;MAAAA,kDAAiC;MAAAA,iBAAM;MAI7EA,+BAAsB;MAEkBA,yBAAQ;MAAAA,iBAAQ;MAChDA,kCAAmD;MAAAA,2DAA0C;MAAAA,iBAAQ;MACrGA,kCACgD;MAA5CA;QAAA;MAAA,EAAgC;MADpCA,iBACgD;MAChDA,+BAA4B;MAAAA,0BAAS;MAAAA,iBAAM;MAC3CA,+BAA8B;MAAAA,kDAAiC;MAAAA,iBAAM;MAEzEA,+BAA2B;MACSA,uBAAM;MAAAA,iBAAQ;MAC9CA,kCAAmD;MAAAA,yDAAwC;MAAAA,iBAAQ;MACnGA,kCAC8C;MAA1CA;QAAA;MAAA,EAA8B;MADlCA,iBAC8C;MAC9CA,+BAA4B;MAAAA,0BAAS;MAAAA,iBAAM;MAC3CA,+BAA8B;MAAAA,kDAAiC;MAAAA,iBAAM;MAG7EA,mCAAqD;MAAxBA;QAAA,OAASC,iBAAa;MAAA,EAAC;MAACD,wBAAO;MAAAA,iBAAS;;;MA/BzDA,eAA8B;MAA9BA,8CAA8B;MAO9BA,eAAiC;MAAjCA,iDAAiC;MAWjCA,gBAAgC;MAAhCA,gDAAgC;MAQhCA,gBAA8B;MAA9BA,8CAA8B","names":["AgregarprovComponent","constructor","ServiceProveedor","codigo","nombre","direccion","telefono","correo","guardarProv","guardar","proveedor","subscribe","res","alert","limpiarProv","location","reload","err","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Daniel Marin\\Proyecto Angular\\netline\\src\\app\\private\\almacen\\proveedores\\agregarprov\\agregarprov.component.ts","C:\\Users\\Daniel Marin\\Proyecto Angular\\netline\\src\\app\\private\\almacen\\proveedores\\agregarprov\\agregarprov.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ProveedoresService } from 'src/app/services/proveedores.service';\r\n\r\n@Component({\r\n  selector: 'app-agregarprov',\r\n  templateUrl: './agregarprov.component.html',\r\n  styleUrls: ['./agregarprov.component.css'],\r\n})\r\nexport class AgregarprovComponent {\r\n  constructor(private ServiceProveedor: ProveedoresService) {}\r\n  proveedores: any;\r\n  proveedor = {\r\n    codigo: '',\r\n    nombre: '',\r\n    direccion: '',\r\n    telefono: '',\r\n    correo: '',\r\n  };\r\n\r\n  guardarProv() {\r\n    this.ServiceProveedor.guardar(\r\n      this.proveedor.codigo,\r\n      this.proveedor.nombre,\r\n      this.proveedor.direccion,\r\n      this.proveedor.telefono,\r\n      this.proveedor.correo\r\n    ).subscribe(\r\n      (res) => {\r\n        alert('Proveedor agregado con éxito');\r\n        this.limpiarProv();\r\n        location.reload();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  limpiarProv() {\r\n    this.proveedor.codigo = '';\r\n    this.proveedor.nombre = '';\r\n    this.proveedor.direccion = '';\r\n    this.proveedor.telefono = '';\r\n    this.proveedor.correo = '';\r\n  } //Cierre del metodo limpiarEmp\r\n}\r\n","<div>\r\n    <form class=\"needs-validation\" novalidate>\r\n        <div class=\"form-row\">\r\n            <div class=\"col-md-6 mb-3\">\r\n                <label for=\"validationCustom01\">Nombre</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"nombre\" id=\"validationCustom01\" ngDefaultControl\r\n                    [(ngModel)]=\"proveedor.nombre\" />\r\n                <div class=\"valid-feedback\">Correcto!</div>\r\n                <div class=\"invalid-feedback\">Por favor ingresa un dato valido.</div>\r\n            </div>\r\n            <div class=\"col-md-6 mb-3\">\r\n                <label for=\"validationCustom02\">Direccion</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"direccion\" id=\"validationCustom02\" ngDefaultControl\r\n                    [(ngModel)]=\"proveedor.direccion\" />\r\n                <div class=\"valid-feedback\">Correcto!</div>\r\n                <div class=\"invalid-feedback\">Por favor ingresa un dato valido.</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n            <div class=\"col-md-6 mb-3\">\r\n                <label for=\"validationCustom03\">Telefono</label>\r\n                <small id=\"emailHelp\" class=\"form-text text-muted\">Ingresa los telefonos separados por comas.</small>\r\n                <input type=\"text\" class=\"form-control\" name=\"telefono\" id=\"validationCustom03\" ngDefaultControl\r\n                    [(ngModel)]=\"proveedor.telefono\" multiple />\r\n                <div class=\"valid-feedback\">Correcto!</div>\r\n                <div class=\"invalid-feedback\">Por favor ingresa un dato valido.</div>\r\n            </div>\r\n            <div class=\"col-md-6 mb-3\">\r\n                <label for=\"validationCustom05\">Correo</label>\r\n                <small id=\"emailHelp\" class=\"form-text text-muted\">Ingresa los correos separados por comas.</small>\r\n                <input type=\"text\" class=\"form-control\" name=\"correo\" id=\"validationCustom05\" ngDefaultControl\r\n                    [(ngModel)]=\"proveedor.correo\" multiple />\r\n                <div class=\"valid-feedback\">Correcto!</div>\r\n                <div class=\"invalid-feedback\">Por favor ingresa un dato valido.</div>\r\n            </div>\r\n        </div>\r\n        <button class=\"btn btn-info\" (click)=\"guardarProv()\">Guardar</button>\r\n    </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}