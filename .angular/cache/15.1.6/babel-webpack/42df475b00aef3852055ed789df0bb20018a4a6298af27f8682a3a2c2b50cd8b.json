{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProveedoresComponent = class ProveedoresComponent {\n  constructor(ServiceProveedor) {\n    this.ServiceProveedor = ServiceProveedor;\n    this.proveedores = [];\n    this.proveedor = {\n      codigo: '',\n      nombre: '',\n      direccion: '',\n      telefono: '',\n      correo: ''\n    };\n  }\n  ngOnInit() {\n    this.consultarTodoProveedores();\n  }\n  consultarTodoProveedores() {\n    this.ServiceProveedor.consultarTodo().subscribe(res => {\n      this.proveedores = res;\n    });\n  }\n  consultarProv(codigo) {\n    this.ServiceProveedor.consultar(codigo).subscribe(res => {\n      this.ServiceProveedor.proveedor.codigo = res.prov.codigo;\n      this.ServiceProveedor.proveedor.nombre = res.prov.nombre;\n      this.ServiceProveedor.proveedor.direccion = res.prov.direccion;\n      this.ServiceProveedor.proveedor.telefono = res.prov.telefono;\n      this.ServiceProveedor.proveedor.correo = res.prov.correo;\n    }, err => {\n      console.log(err);\n      if (typeof err.error === 'string') {\n        alert(err.error);\n      } else {\n        alert(err.error.error[0].msg);\n      }\n      this.limpiarProServicio();\n    });\n  }\n  eliminarPro(codigo) {\n    this.ServiceProveedor.eliminar(codigo).subscribe(res => {\n      this.consultarTodoProveedores();\n    }, err => {\n      console.log(err);\n      if (typeof err.error === 'string') {\n        alert(err.error);\n      } else {\n        alert(err.error.error[0].msg);\n      }\n    });\n  }\n  limpiarProServicio() {\n    this.ServiceProveedor.proveedor.codigo = '';\n    this.ServiceProveedor.proveedor.nombre = '';\n    this.ServiceProveedor.proveedor.direccion = '';\n    this.ServiceProveedor.proveedor.telefono = '';\n    this.ServiceProveedor.proveedor.correo = '';\n  }\n  limpiarPro() {\n    this.proveedor.codigo = '';\n    this.proveedor.nombre = '';\n    this.proveedor.direccion = '';\n    this.proveedor.telefono = '';\n    this.proveedor.correo = '';\n  } //Cierre del metodo limpiarEmp\n};\n\nProveedoresComponent = __decorate([Component({\n  selector: 'app-proveedores',\n  templateUrl: './proveedores.component.html',\n  styleUrls: ['./proveedores.component.css']\n})], ProveedoresComponent);\nexport { ProveedoresComponent };","map":{"version":3,"mappings":"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","names":["Component","ProveedoresComponent","constructor","ServiceProveedor","codigo","nombre","direccion","telefono","correo","ngOnInit","consultarTodoProveedores","consultarTodo","subscribe","res","proveedores","consultarProv","consultar","proveedor","prov","err","console","log","error","alert","msg","limpiarProServicio","eliminarPro","eliminar","limpiarPro","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Daniel Marin\\Proyecto Angular\\netline\\src\\app\\private\\almacen\\proveedores\\proveedores.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-proveedores',\n  templateUrl: './proveedores.component.html',\n  styleUrls: ['./proveedores.component.css']\n})\nexport class ProveedoresComponent {\n  constructor(private ServiceProveedor: ProveedoresService) {}\n  proveedores: any = [];\n  proveedor = {\n    codigo: '',\n    nombre: '',\n    direccion: '',\n    telefono: '',\n    correo: '',\n  };\n\n  ngOnInit(): void {\n    this.consultarTodoProveedores();\n  }\n\n  consultarTodoProveedores() {\n    this.ServiceProveedor.consultarTodo().subscribe((res: any) => {\n      this.proveedores = res;\n    });\n  }\n\n  consultarProv(codigo: string) {\n    this.ServiceProveedor.consultar(codigo).subscribe(\n      (res) => {\n        this.ServiceProveedor.proveedor.codigo = res.prov.codigo;\n        this.ServiceProveedor.proveedor.nombre = res.prov.nombre;\n        this.ServiceProveedor.proveedor.direccion = res.prov.direccion;\n        this.ServiceProveedor.proveedor.telefono = res.prov.telefono;\n        this.ServiceProveedor.proveedor.correo = res.prov.correo;\n      },\n      (err) => {\n        console.log(err);\n        if (typeof err.error === 'string') {\n          alert(err.error);\n        } else {\n          alert(err.error.error[0].msg);\n        }\n        this.limpiarProServicio();\n      }\n    );\n  }\n\n  eliminarPro(codigo: string) {\n    this.ServiceProveedor.eliminar(codigo).subscribe(\n      (res) => {\n        this.consultarTodoProveedores();\n      },\n      (err) => {\n        console.log(err);\n        if (typeof err.error === 'string') {\n          alert(err.error);\n        } else {\n          alert(err.error.error[0].msg);\n        }\n      }\n    );\n  }\n\n  limpiarProServicio() {\n    this.ServiceProveedor.proveedor.codigo = '';\n    this.ServiceProveedor.proveedor.nombre = '';\n    this.ServiceProveedor.proveedor.direccion = '';\n    this.ServiceProveedor.proveedor.telefono = '';\n    this.ServiceProveedor.proveedor.correo = '';\n  }\n\n  limpiarPro() {\n    this.proveedor.codigo = '';\n    this.proveedor.nombre = '';\n    this.proveedor.direccion = '';\n    this.proveedor.telefono = '';\n    this.proveedor.correo = '';\n  } //Cierre del metodo limpiarEmp\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}