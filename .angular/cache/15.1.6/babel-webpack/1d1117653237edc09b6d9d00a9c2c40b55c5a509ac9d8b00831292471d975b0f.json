{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet ProductosService = class ProductosService {\n  constructor(http) {\n    this.http = http;\n    this.producto = {\n      codigo: '',\n      nombre: '',\n      noParte: '',\n      proveedores: '',\n      tipo: '',\n      categoria: '',\n      descripcion: '',\n      unidad: '',\n      precio: '',\n      existencia: '',\n      imagen: ''\n    };\n    this.url = 'http://localhost:3000/productos';\n  }\n  guardar(codigo, nombre, noParte, proveedores, tipo, categoria, descripcion, unidad, precio, existencia, file) {\n    const fd = new FormData();\n    fd.append('codigo', codigo);\n    fd.append('nombre', nombre);\n    fd.append('noParte', noParte);\n    fd.append('proveedores', proveedores);\n    fd.append('tipo', tipo);\n    fd.append('categoria', categoria);\n    fd.append('descripcion', descripcion);\n    fd.append('unidad', unidad);\n    fd.append('precio', precio);\n    fd.append('existencia', existencia);\n    fd.append('imagen', file);\n    return this.http.post(this.url, fd);\n  }\n  modificar(codigo, nombre, noParte, proveedores, tipo, categoria, descripcion, unidad, precio, existencia, file) {\n    const fd = new FormData();\n    fd.append('codigo', codigo);\n    fd.append('nombre', nombre);\n    fd.append('noParte', noParte);\n    fd.append('proveedores', proveedores);\n    fd.append('tipo', tipo);\n    fd.append('categoria', categoria);\n    fd.append('descripcion', descripcion);\n    fd.append('unidad', unidad);\n    fd.append('precio', precio);\n    fd.append('existencia', existencia);\n    fd.append('imagen', file);\n    return this.http.put(this.url, fd);\n  }\n  consultarTodo() {\n    return this.http.get(this.url);\n  }\n  consultar(codigo) {\n    return this.http.get(this.url + '/datos/' + codigo);\n  }\n  eliminar(codigo) {\n    return this.http.delete(this.url + '/eliminar' + codigo);\n  }\n};\nProductosService = __decorate([Injectable({\n  providedIn: 'root'\n})], ProductosService);\nexport { ProductosService };","map":{"version":3,"mappings":"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","names":["Injectable","ProductosService","constructor","http","codigo","nombre","noParte","proveedores","tipo","categoria","descripcion","unidad","precio","existencia","imagen","guardar","file","fd","FormData","append","post","url","modificar","put","consultarTodo","get","consultar","eliminar","delete","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Daniel Marin\\Proyecto Angular\\netline\\src\\app\\services\\productos.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductosService {\n  producto = {\n    codigo: '',\n    nombre: '',\n    noParte: '',\n    proveedores: '',\n    tipo: '',\n    categoria: '',\n    descripcion: '',\n    unidad: '',\n    precio: '',\n    existencia: '',\n    imagen: '',\n  };\n  private url = 'http://localhost:3000/productos';\n  constructor(private http: HttpClient) {}\n\n  guardar(\n    codigo: string,\n    nombre: string,\n    noParte: string,\n    proveedores: string,\n    tipo: string,\n    categoria: string,\n    descripcion: string,\n    unidad: string,\n    precio: string,\n    existencia: string,\n    file: File\n  ) {\n    const fd = new FormData();\n    fd.append('codigo', codigo);\n    fd.append('nombre', nombre);\n    fd.append('noParte', noParte);\n    fd.append('proveedores', proveedores);\n    fd.append('tipo', tipo);\n    fd.append('categoria', categoria);\n    fd.append('descripcion', descripcion);\n    fd.append('unidad', unidad);\n    fd.append('precio', precio);\n    fd.append('existencia', existencia);\n    fd.append('imagen', file);\n    return this.http.post(this.url, fd);\n  }\n\n  modificar(\n    codigo: string,\n    nombre: string,\n    noParte: string,\n    proveedores: string,\n    tipo: string,\n    categoria: string,\n    descripcion: string,\n    unidad: string,\n    precio: string,\n    existencia: string,\n    file: File\n  ) {\n    const fd = new FormData();\n    fd.append('codigo', codigo);\n    fd.append('nombre', nombre);\n    fd.append('noParte', noParte);\n    fd.append('proveedores', proveedores);\n    fd.append('tipo', tipo);\n    fd.append('categoria', categoria);\n    fd.append('descripcion', descripcion);\n    fd.append('unidad', unidad);\n    fd.append('precio', precio);\n    fd.append('existencia', existencia);\n    fd.append('imagen', file);\n    return this.http.put(this.url, fd);\n  }\n\n  consultarTodo() {\n    return this.http.get(this.url);\n  }\n\n  consultar(codigo: string) {\n    return this.http.get<any>(this.url + '/datos/' + codigo);\n  }\n\n  eliminar(codigo: string) {\n    return this.http.delete(this.url + '/eliminar' + codigo);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}