{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(router, ServicioLogin, ServicioEmp) {\n    this.router = router;\n    this.ServicioLogin = ServicioLogin;\n    this.ServicioEmp = ServicioEmp;\n    this.mensaje = \"\";\n    this.usuario = {\n      nombre: \"\",\n      contra: \"\"\n    };\n  }\n  login() {\n    if (this.usuario.email != \"\" && this.usuario.contra != \"\") {\n      this.ServicioLogin.login(this.usuario).subscribe(res => {\n        //QUIEN INICIO SESIÓN \n        if (res.usu.tipo == 1) {\n          //Si es un Empleado \n          this.ServicioLogin.consultarToken(res.usu.email).subscribe(res => {\n            console.log(res);\n            localStorage.setItem(\"mensaje\", \"Bienvenido al sistema: \" + res.emp.nombre);\n            localStorage.setItem(\"nombre\", res.emp.nombre);\n            localStorage.setItem(\"puesto\", res.emp.puesto);\n            localStorage.setItem(\"token\", res.emp.jwebtoken);\n            this.router.navigate(['/inicio']);\n          }, err => {});\n        } else if (res.usu.tipo == 2) {//Si es un Cliente\n        }\n        /*console.log(res);\r\n        localStorage.setItem(\"mensaje\", \"Bienvenido al sistema: \" + res.usu.email);\r\n        localStorage.setItem(\"nombre\", res.usu.email);\r\n        this.router.navigate(['/inicio']);*/\n      }, err => {\n        console.log(err);\n        if (typeof err.error == \"string\") {\n          this.mensaje = err.error;\n        } else {\n          this.mensaje = err.error.error[0].msg;\n          //alert(err.error.error[0].msg);\n        }\n      });\n    } else {\n      this.mensaje = \"Los campos no pueden estar vacios\";\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAQzBC,YAAoBC,MAAc,EAAUC,aAA2B,EAAWC,WAA6B;IAA3F,WAAM,GAANF,MAAM;IAAkB,kBAAa,GAAbC,aAAa;IAAyB,gBAAW,GAAXC,WAAW;IAN7F,YAAO,GAAG,EAAE;IACZ,YAAO,GAAG;MACRC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;KACT;EAID;EAEAC,KAAK;IACH,IAAI,IAAI,CAACC,OAAO,CAACC,KAAK,IAAI,EAAE,IAAI,IAAI,CAACD,OAAO,CAACF,MAAM,IAAI,EAAE,EAAE;MACzD,IAAI,CAACH,aAAa,CAACI,KAAK,CAAC,IAAI,CAACC,OAAO,CAAC,CAACE,SAAS,CAC7CC,GAAG,IAAI;QAEN;QACA,IAAIA,GAAG,CAACC,GAAG,CAACC,IAAI,IAAI,CAAC,EAAE;UAAE;UACvB,IAAI,CAACV,aAAa,CAACW,cAAc,CAACH,GAAG,CAACC,GAAG,CAACH,KAAK,CAAC,CAACC,SAAS,CACvDC,GAAG,IAAI;YACNI,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;YAChBM,YAAY,CAACC,OAAO,CAAC,SAAS,EAAE,yBAAyB,GAAGP,GAAG,CAACQ,GAAG,CAACd,MAAM,CAAC;YAC3EY,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEP,GAAG,CAACQ,GAAG,CAACd,MAAM,CAAC;YAC9CY,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEP,GAAG,CAACQ,GAAG,CAACC,MAAM,CAAC;YAC9CH,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,GAAG,CAACQ,GAAG,CAACE,SAAS,CAAC;YAChD,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;UACnC,CAAC,EACAC,GAAG,IAAI,CAER,CAAC,CACF;SACF,MAAM,IAAIZ,GAAG,CAACC,GAAG,CAACC,IAAI,IAAI,CAAC,EAAE,CAAE;QAAA;QAIhC;;;;MAIF,CAAC,EACAU,GAAG,IAAI;QACNR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;QAChB,IAAI,OAAQA,GAAG,CAACC,KAAM,IAAI,QAAQ,EAAE;UAClC,IAAI,CAACC,OAAO,GAAGF,GAAG,CAACC,KAAK;SACzB,MAAM;UACL,IAAI,CAACC,OAAO,GAAGF,GAAG,CAACC,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,CAACE,GAAG;UACrC;;MAEJ,CAAC,CACF;KACF,MACI;MACH,IAAI,CAACD,OAAO,GAAG,mCAAmC;;EAEtD;CAED;AAzDYzB,cAAc,eAL1BD,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW7B,cAAc,CAyD1B;SAzDYA,cAAc","names":["Component","LoginComponent","constructor","router","ServicioLogin","ServicioEmp","nombre","contra","login","usuario","email","subscribe","res","usu","tipo","consultarToken","console","log","localStorage","setItem","emp","puesto","jwebtoken","navigate","err","error","mensaje","msg","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Daniel Marin\\Proyecto Angular\\netline\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  mensaje = \"\";\n  usuario = {\n    nombre: \"\",\n    contra: \"\"\n  }\n\n  constructor(private router: Router, private ServicioLogin: LoginService,  private ServicioEmp: EmpleadosService) {\n\n  }\n\n  login() {\n    if (this.usuario.email != \"\" && this.usuario.contra != \"\") {\n      this.ServicioLogin.login(this.usuario).subscribe(\n        (res) => {\n\n          //QUIEN INICIO SESIÓN \n          if (res.usu.tipo == 1) { //Si es un Empleado \n            this.ServicioLogin.consultarToken(res.usu.email).subscribe(\n              (res) => {\n                console.log(res);\n                localStorage.setItem(\"mensaje\", \"Bienvenido al sistema: \" + res.emp.nombre);\n                localStorage.setItem(\"nombre\", res.emp.nombre);\n                localStorage.setItem(\"puesto\", res.emp.puesto);\n                localStorage.setItem(\"token\", res.emp.jwebtoken);\n                this.router.navigate(['/inicio']);\n              },\n              (err) => {\n\n              }\n            );\n          } else if (res.usu.tipo == 2) { //Si es un Cliente\n\n          }\n\n          /*console.log(res);\n          localStorage.setItem(\"mensaje\", \"Bienvenido al sistema: \" + res.usu.email);\n          localStorage.setItem(\"nombre\", res.usu.email);\n          this.router.navigate(['/inicio']);*/\n        },\n        (err) => {\n          console.log(err);\n          if (typeof (err.error) == \"string\") {\n            this.mensaje = err.error;\n          } else {\n            this.mensaje = err.error.error[0].msg;\n            //alert(err.error.error[0].msg);\n          }\n        }\n      );\n    }\n    else {\n      this.mensaje = \"Los campos no pueden estar vacios\";\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}