{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class LoginService {\n  //private url = \"https://192.168.137.1:3001/usuarios\";\n  //private urlemp = \"http://192.168.137.1:3001/empleados\";\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.url = \"http://localhost:3000/usuarios\";\n    this.urlemp = \"http://localhost:3000/empleados\";\n  }\n  consultarToken(nombre) {\n    return this.http.get(this.urlemp + \"/login/\" + email);\n  }\n  guardarUsu(usuario) {\n    return this.http.post(this.url, usuario);\n  }\n  modificarUsu(usuario) {\n    return this.http.put(this.url, usuario);\n  }\n  eliminarUsu(email) {\n    return this.http.delete(this.url + \"/delete/\" + email);\n  }\n  login(usuario) {\n    return this.http.post(this.url + \"/iniciosesion\", usuario);\n  }\n  logout() {\n    //this.sesion = false;\n    //Elimina una variable especifica del localStorage\n    //localStorage.removeItem(\"nombre\");\n    //Elimina todas las variables del localStorage\n    localStorage.clear();\n    //Redireccionamiento a un url especifico\n    this.router.navigate(['/login']);\n    alert(\"Sesión cerrada correctamente\");\n  }\n  esLogeado() {\n    /*if (localStorage.getItem(\"nombre\") != null) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }*/\n    //Sustituye el If-Else anterior\n    return !!localStorage.getItem(\"nombre\");\n  }\n  esEmpleado() {\n    return !!localStorage.getItem(\"puesto\");\n  }\n  suPuesto() {\n    return localStorage.getItem(\"puesto\");\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,YAAY;EAIvB;EACA;EAGAC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,WAAM,GAAND,MAAM;IAAkB,SAAI,GAAJC,IAAI;IANxC,QAAG,GAAG,gCAAgC;IACtC,WAAM,GAAG,iCAAiC;EAOlD;EAEAC,cAAc,CAACC,MAAc;IAC3B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACC,MAAM,GAAG,SAAS,GAAGC,KAAK,CAAC;EAC5D;EAEAC,UAAU,CAACC,OAAe;IACxB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,IAAI,CAACC,GAAG,EAAEF,OAAO,CAAC;EAC/C;EAEAG,YAAY,CAACH,OAAe;IAC1B,OAAO,IAAI,CAACP,IAAI,CAACW,GAAG,CAAM,IAAI,CAACF,GAAG,EAAEF,OAAO,CAAC;EAC9C;EAEAK,WAAW,CAACP,KAAa;IACvB,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAAM,IAAI,CAACJ,GAAG,GAAG,UAAU,GAAGJ,KAAK,CAAC;EAC7D;EAGAS,KAAK,CAACP,OAAe;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,IAAI,CAACC,GAAG,GAAG,eAAe,EAAEF,OAAO,CAAC;EACjE;EAEAQ,MAAM;IACJ;IACA;IACA;IAEA;IACAC,YAAY,CAACC,KAAK,EAAE;IAEpB;IACA,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChCC,KAAK,CAAC,8BAA8B,CAAC;EACvC;EAEAC,SAAS;IACP;;;;;IAKA;IACA,OAAO,CAAC,CAACJ,YAAY,CAACK,OAAO,CAAC,QAAQ,CAAC;EACzC;EAEAC,UAAU;IACR,OAAO,CAAC,CAACN,YAAY,CAACK,OAAO,CAAC,QAAQ,CAAC;EACzC;EAEAE,QAAQ;IACN,OAAOP,YAAY,CAACK,OAAO,CAAC,QAAQ,CAAC;EACvC;;AA9DWxB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAA2B,SAAZ3B,YAAY;EAAA4B,YAFX;AAAM","names":["LoginService","constructor","router","http","consultarToken","nombre","get","urlemp","email","guardarUsu","usuario","post","url","modificarUsu","put","eliminarUsu","delete","login","logout","localStorage","clear","navigate","alert","esLogeado","getItem","esEmpleado","suPuesto","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Daniel Marin\\Proyecto Angular\\netline\\src\\app\\services\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private url = \"http://localhost:3000/usuarios\";\n  private urlemp = \"http://localhost:3000/empleados\";\n  //private url = \"https://192.168.137.1:3001/usuarios\";\n  //private urlemp = \"http://192.168.137.1:3001/empleados\";\n\n\n  constructor(private router: Router, private http: HttpClient) {\n\n  }\n\n  consultarToken(nombre: String) {\n    return this.http.get<any>(this.urlemp + \"/login/\" + email);\n  }\n\n  guardarUsu(usuario: object) {\n    return this.http.post<any>(this.url, usuario);\n  }\n\n  modificarUsu(usuario: object) {\n    return this.http.put<any>(this.url, usuario);\n  }\n\n  eliminarUsu(email: string) {\n    return this.http.delete<any>(this.url + \"/delete/\" + email);\n  }\n\n\n  login(usuario: object) {\n    return this.http.post<any>(this.url + \"/iniciosesion\", usuario);\n  }\n\n  logout() {\n    //this.sesion = false;\n    //Elimina una variable especifica del localStorage\n    //localStorage.removeItem(\"nombre\");\n\n    //Elimina todas las variables del localStorage\n    localStorage.clear();\n\n    //Redireccionamiento a un url especifico\n    this.router.navigate(['/login']);\n    alert(\"Sesión cerrada correctamente\");\n  }\n\n  esLogeado(): boolean {\n    /*if (localStorage.getItem(\"nombre\") != null) {\n      return true;\n    } else {\n      return false;\n    }*/\n    //Sustituye el If-Else anterior\n    return !!localStorage.getItem(\"nombre\");\n  }\n\n  esEmpleado(): boolean {\n    return !!localStorage.getItem(\"puesto\");\n  }\n\n  suPuesto() {\n    return localStorage.getItem(\"puesto\");\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}