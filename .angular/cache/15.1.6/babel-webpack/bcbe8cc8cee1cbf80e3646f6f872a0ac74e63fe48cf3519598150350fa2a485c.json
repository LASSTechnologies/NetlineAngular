{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmpleadosService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:3000/empleados\";\n    this.urlUsu = \"http://localhost:3000/usuarios\";\n    this.empleado = {\n      codigo: \"\",\n      nombre: \"\",\n      apellido: \"\",\n      puesto: \"\",\n      telefono: \"\",\n      correo: \"\",\n      direccion: \"\",\n      estatus: \"\",\n      imgurl: \"\"\n    };\n  }\n  guardarUsu(usuario) {\n    return this.http.post(this.urlUsu, usuario);\n  }\n  guardar(codigo, nombre, apellido, puesto, telefono, correo, direccion, estatus, file) {\n    const fd = new FormData();\n    fd.append(\"codigo\", codigo);\n    fd.append(\"nombre\", nombre);\n    fd.append(\"apellido\", apellido);\n    fd.append(\"puesto\", puesto);\n    fd.append(\"telefono\", telefono);\n    fd.append(\"correo\", correo);\n    fd.append(\"direccion\", direccion);\n    fd.append(\"estatus\", estatus);\n    fd.append(\"imagen\", file);\n    return this.http.post(this.url, fd);\n  }\n  modificar(codigo, nombre, apellido, puesto, telefono, correo, direccion, estatus, file) {\n    const fd = new FormData();\n    fd.append(\"codigo\", codigo);\n    fd.append(\"nombre\", nombre);\n    fd.append(\"apellido\", apellido);\n    fd.append(\"puesto\", puesto);\n    fd.append(\"telefono\", telefono);\n    fd.append(\"correo\", correo);\n    fd.append(\"direccion\", direccion);\n    fd.append(\"estatus\", estatus);\n    fd.append(\"imagen\", file);\n    return this.http.put(this.url, fd);\n  }\n  eliminar(codigo) {\n    return this.http.delete(this.url + '/eliminar/' + codigo);\n  }\n  consultar(codigo) {\n    return this.http.get(this.url + '/datos/' + codigo);\n  }\n  consultarTodo() {\n    return this.http.get(this.url);\n  }\n}\nEmpleadosService.ɵfac = function EmpleadosService_Factory(t) {\n  return new (t || EmpleadosService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmpleadosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmpleadosService,\n  factory: EmpleadosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,QAAG,GAAG,iCAAiC;IACvC,WAAM,GAAG,gCAAgC;IAGjD,aAAQ,GAAG;MACTC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;KAET;EAbuC;EAgBxCC,UAAU,CAACC,OAAe;IACxB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAM,IAAI,CAACC,MAAM,EAAEF,OAAO,CAAC;EAClD;EAEAG,OAAO,CACLb,MAAc,EACdC,MAAc,EACdC,QAAgB,EAChBC,MAAc,EACdC,QAAgB,EAChBC,MAAc,EACdC,SAAiB,EACjBC,OAAe,EACfO,IAAU;IAGV,MAAMC,EAAE,GAAG,IAAIC,QAAQ,EAAE;IACzBD,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEjB,MAAM,CAAC;IAC3Be,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEhB,MAAM,CAAC;IAC3Bc,EAAE,CAACE,MAAM,CAAC,UAAU,EAAEf,QAAQ,CAAC;IAC/Ba,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEd,MAAM,CAAC;IAC3BY,EAAE,CAACE,MAAM,CAAC,UAAU,EAAEb,QAAQ,CAAC;IAC/BW,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEZ,MAAM,CAAC;IAC3BU,EAAE,CAACE,MAAM,CAAC,WAAW,EAAEX,SAAS,CAAC;IACjCS,EAAE,CAACE,MAAM,CAAC,SAAS,EAAEV,OAAO,CAAC;IAC7BQ,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEH,IAAI,CAAC;IAGzB,OAAO,IAAI,CAACf,IAAI,CAACY,IAAI,CAAM,IAAI,CAACO,GAAG,EAAEH,EAAE,CAAC;EAC1C;EAEAI,SAAS,CAACnB,MAAc,EACtBC,MAAc,EACdC,QAAgB,EAChBC,MAAc,EACdC,QAAgB,EAChBC,MAAc,EACdC,SAAiB,EACjBC,OAAe,EACfO,IAAU;IAGV,MAAMC,EAAE,GAAG,IAAIC,QAAQ,EAAE;IACzBD,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEjB,MAAM,CAAC;IAC3Be,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEhB,MAAM,CAAC;IAC3Bc,EAAE,CAACE,MAAM,CAAC,UAAU,EAAEf,QAAQ,CAAC;IAC/Ba,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEd,MAAM,CAAC;IAC3BY,EAAE,CAACE,MAAM,CAAC,UAAU,EAAEb,QAAQ,CAAC;IAC/BW,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEZ,MAAM,CAAC;IAC3BU,EAAE,CAACE,MAAM,CAAC,WAAW,EAAEX,SAAS,CAAC;IACjCS,EAAE,CAACE,MAAM,CAAC,SAAS,EAAEV,OAAO,CAAC;IAC7BQ,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAEH,IAAI,CAAC;IAGzB,OAAO,IAAI,CAACf,IAAI,CAACqB,GAAG,CAAM,IAAI,CAACF,GAAG,EAAEH,EAAE,CAAC;EAEzC;EAEAM,QAAQ,CAACrB,MAAc;IAErB,OAAO,IAAI,CAACD,IAAI,CAACuB,MAAM,CAAM,IAAI,CAACJ,GAAG,GAAG,YAAY,GAAGlB,MAAM,CAAC;EAEhE;EAEAuB,SAAS,CAACvB,MAAc;IAEtB,OAAO,IAAI,CAACD,IAAI,CAACyB,GAAG,CAAM,IAAI,CAACN,GAAG,GAAG,SAAS,GAAGlB,MAAM,CAAC;EAC1D;EAEAyB,aAAa;IAEX,OAAO,IAAI,CAAC1B,IAAI,CAACyB,GAAG,CAAM,IAAI,CAACN,GAAG,CAAC;EAErC;;AA7FWrB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAA6B,SAAhB7B,gBAAgB;EAAA8B,YAFf;AAAM","names":["EmpleadosService","constructor","http","codigo","nombre","apellido","puesto","telefono","correo","direccion","estatus","imgurl","guardarUsu","usuario","post","urlUsu","guardar","file","fd","FormData","append","url","modificar","put","eliminar","delete","consultar","get","consultarTodo","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Daniel Marin\\Proyecto Angular\\netline\\src\\app\\services\\empleados.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpleadosService {\n\n  private url = \"http://localhost:3000/empleados\";\n  private urlUsu = \"http://localhost:3000/usuarios\";\n  constructor(private http: HttpClient) { }\n\n  empleado = {\n    codigo: \"\",\n    nombre: \"\",\n    apellido: \"\",\n    puesto: \"\",\n    telefono: \"\",\n    correo: \"\",\n    direccion: \"\",\n    estatus: \"\",\n    imgurl: \"\",\n\n  }\n\n\n  guardarUsu(usuario: object) {\n    return this.http.post<any>(this.urlUsu, usuario);\n  }\n\n  guardar(\n    codigo: string,\n    nombre: string,\n    apellido: string,\n    puesto: string,\n    telefono: string,\n    correo: string,\n    direccion: string,\n    estatus: string,\n    file: File\n  ) {\n\n    const fd = new FormData();\n    fd.append(\"codigo\", codigo);\n    fd.append(\"nombre\", nombre);\n    fd.append(\"apellido\", apellido);\n    fd.append(\"puesto\", puesto);\n    fd.append(\"telefono\", telefono);\n    fd.append(\"correo\", correo);\n    fd.append(\"direccion\", direccion);\n    fd.append(\"estatus\", estatus);\n    fd.append(\"imagen\", file);\n\n\n    return this.http.post<any>(this.url, fd);\n  }\n\n  modificar(codigo: string,\n    nombre: string,\n    apellido: string,\n    puesto: string,\n    telefono: string,\n    correo: string,\n    direccion: string,\n    estatus: string,\n    file: File\n  ) {\n\n    const fd = new FormData();\n    fd.append(\"codigo\", codigo);\n    fd.append(\"nombre\", nombre);\n    fd.append(\"apellido\", apellido);\n    fd.append(\"puesto\", puesto);\n    fd.append(\"telefono\", telefono);\n    fd.append(\"correo\", correo);\n    fd.append(\"direccion\", direccion);\n    fd.append(\"estatus\", estatus);\n    fd.append(\"imagen\", file);\n\n\n    return this.http.put<any>(this.url, fd);\n\n  }\n\n  eliminar(codigo: String) {\n\n    return this.http.delete<any>(this.url + '/eliminar/' + codigo);\n\n  }\n\n  consultar(codigo: String) {\n\n    return this.http.get<any>(this.url + '/datos/' + codigo);\n  }\n\n  consultarTodo() {\n\n    return this.http.get<any>(this.url);\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}